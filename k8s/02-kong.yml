apiVersion: configuration.konghq.com/v1
kind: KongConsumer
metadata:
  name: ${CI_PROJECT_NAME}-consumer-public
  namespace: ${KUBE_NAMESPACE}
  annotations:
    kubernetes.io/ingress.class: api-gw-public
username: ${CI_PROJECT_NAME}
custom_id: ${CI_PROJECT_NAME}
credentials:
  - ${CI_PROJECT_NAME}-acl
---
apiVersion: configuration.konghq.com/v1
kind: KongConsumer
metadata:
  name: ${CI_PROJECT_NAME}-consumer-apptoken
  namespace: ${KUBE_NAMESPACE}
  annotations:
    kubernetes.io/ingress.class: api-gw
username: ${CI_PROJECT_NAME}-1
custom_id: ${CI_PROJECT_NAME}-1
credentials:
  - ${CI_PROJECT_NAME}-apptoken
  - ${CI_PROJECT_NAME}-acl
---
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: ${CI_PROJECT_NAME}-vtexapptoken
  namespace: ${KUBE_NAMESPACE}
config:
  key_names:
    - X-VTEX-API-AppToken
plugin: key-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: ${CI_PROJECT_NAME}-apptoken
  namespace: ${KUBE_NAMESPACE}
stringData:
  kongCredType: key-auth
  key: ${KONG_APPTOKEN}
---
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: ${CI_PROJECT_NAME}-acl
  namespace: ${KUBE_NAMESPACE}
  annotation:
    kubernetes.io/ingress.class: api-gw
plugin: acl
config:
  whitelist:
    - ${CI_PROJECT_NAME}-access
---
apiVersion: v1
kind: Secret
metadata:
  name: ${CI_PROJECT_NAME}-acl
  namespace: ${KUBE_NAMESPACE}
stringData:
  kongCredType: acl
  group: ${CI_PROJECT_NAME}-access
