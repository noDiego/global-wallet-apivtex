include:
  - project: 'cencosud-ds/cencommerce/utils/pipe-templates'
    file: 'deploy-to-k8s.yml'

staging:
  extends:
    - .assume_role
    - .deploy_to_k8s
  script:
    - aws sts get-caller-identity
    - aws eks update-kubeconfig --name ${KUBE_CLUSTER}
    - kubectl create secret docker-registry gitlab-auth-$CI_PROJECT_NAME --docker-server=$CI_REGISTRY --docker-username=$CI_DEPLOY_USER --docker-password=$CI_DEPLOY_PASSWORD -n $NAMESPACE -o yaml --dry-run | kubectl apply -f -
    - |
      if [[ -f "${PWD}/.env.example" ]]; then export SECRET_FILE="${PWD}/.env.example"; elif [[ -f "${PWD}/k8s/secret" ]]; then export SECRET_FILE="${PWD}/k8s/secret"; fi
      cat ${SECRET_FILE} | envsubst >> ./k8s/secret-tmp
      kubectl create secret generic secret-$CI_PROJECT_NAME --from-env-file ./k8s/secret-tmp -n $NAMESPACE -o yaml --dry-run | kubectl apply -f -
      kuby --ci prepare --ll debug
  rules:
    - if: $CI_COMMIT_BRANCH != "master"


production:
  extends:
    - .assume_role
    - .deploy_to_k8s
  script:
    - set
    - aws sts get-caller-identity
    - aws eks update-kubeconfig --name ${KUBE_CLUSTER}
    - kubectl create secret docker-registry gitlab-auth-$CI_PROJECT_NAME --docker-server=$CI_REGISTRY --docker-username=$CI_DEPLOY_USER --docker-password=$CI_DEPLOY_PASSWORD -n $NAMESPACE -o yaml --dry-run | kubectl apply -f -
    - |
      if [[ -f "${PWD}/.env.example" ]]; then export SECRET_FILE="${PWD}/.env.example"; elif [[ -f "${PWD}/k8s/secret" ]]; then export SECRET_FILE="${PWD}/k8s/secret"; fi
      cat ${SECRET_FILE} | envsubst >> ./k8s/secret-tmp
      kubectl create secret generic secret-$CI_PROJECT_NAME --from-env-file ./k8s/secret-tmp -n $NAMESPACE -o yaml --dry-run | kubectl apply -f -
      kuby --ci prepare --ll debug
  rules:
    - if: $CI_COMMIT_BRANCH == "master"




.jira:
  script:
    - echo "hello jira"



pkg:container:
  extends:
    - .docker
  rules:
    - if: $CI_COMMIT_BRANCH != "master"
  environment:
    name: staging



pkg:master:
  extends:
    - .docker
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  environment:
    name: production
